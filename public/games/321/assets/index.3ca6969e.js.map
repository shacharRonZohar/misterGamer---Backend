{"version":3,"file":"index.3ca6969e.js","sources":["../../../../../Test Games/TS Checkers - Vite/vite/modulepreload-polyfill","../../../../../Test Games/TS Checkers - Vite/src/classes.ts","../../../../../Test Games/TS Checkers - Vite/src/main.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { Board, Pos } from './types'\n\n// TODO: Fix this mess of a code\nexport class Game {\n  constructor() {\n    this._id = _makeId()\n    this.createdAt = Date.now()\n    this.board = new GameBoard()\n    this.turnColor = 'white'\n    this.isGameOver = false\n  }\n  newGame() {\n    this.newBoard()\n    this.isGameOver = false\n    this.turnColor = 'white'\n  }\n  newBoard() {\n    this.board = new GameBoard()\n  }\n  renderBoard() {\n    // I use the \"aggresive way\" of creating the elements because the regular way of creating strings and \n    // adding them to the innerHTML dosen't work with modules and functions.\n    const elBoard = document.querySelector('.board-container tbody')!\n    elBoard.innerHTML = ''\n    this.board.value.forEach(row => {\n      const elRow = document.createElement('tr')\n      elRow.classList.add('board-row')\n      row.forEach(({ piece, pos, isMarked }) => {\n        const elCell = document.createElement('td')\n        elCell.classList.add('board-cell')\n        if (piece) elCell.classList.add(piece)\n        if (isMarked) elCell.classList.add('mark')\n        elCell.innerText = piece\n        elCell.addEventListener('click', () => this.onCellClick(pos))\n        elRow.appendChild(elCell)\n      })\n      elBoard.appendChild(elRow)\n    })\n  }\n  onCellClick(pos: Pos) {\n    if (this.isGameOver) return\n    const { piece, isMarked } = this.board.getCellByPos(pos)\n    if (isMarked) {\n      console.log('Im moving!')\n      this.board.movePiece(pos)\n      console.log(this.board)\n      this.renderBoard()\n      this.passTurn()\n      return\n    }\n    if (!piece) return\n    if (this.turnColor !== piece) return\n    this.board.selectedCell = pos\n    this.board.markPossibleMoves(pos)\n    this.renderBoard()\n  }\n  passTurn() {\n    if (this.turnColor === 'white') this.turnColor = 'black'\n    else this.turnColor = 'white'\n  }\n}\nclass GameBoard {\n  // board:Board\n  // createdAt = Date.now()\n  constructor() {\n    this._id = _makeId()\n    this.createdAt = Date.now()\n    this.value = this.createBoard()\n    this.selectedCell = null\n  }\n  createBoard() {\n    const board: Board = []\n    for (let i = 0; i < 8; i++) {\n      board.push([])\n      for (let j = 0; j < 8; j++) {\n        board[i].push(this.getNewCell(i, j))\n      }\n    }\n    return board\n  }\n  getCellByPos(pos: Pos) {\n    return this.value[pos.i][pos.j]\n  }\n  markPossibleMoves(pos: Pos) {\n    const { piece: ogPiece } = this.getCellByPos(pos)\n    for (let i = pos.i - 1; i <= pos.i + 1; i++) {\n      for (let j = pos.j - 1; j <= pos.j + 1; j++) {\n        // if ((i + j) % 2 !== 0) continue\n        if ((i + j) % 2 !== 0 || i < 0 || i > this.value.length || j < 0 || j > this.value[i].length) continue\n        const cell = this.getCellByPos({ i, j })\n        if (cell.piece === ogPiece) continue\n        cell.isMarked = true\n      }\n    }\n  }\n  movePiece(pos: Pos) {\n    // This check is not really needed, but it's good to have it, especially to make TS shut up\n    if (!this.selectedCell) return\n    // Get the piece and from the cell we want to move from\n    const { piece } = this.getCellByPos(this.selectedCell)\n    // When we call setCellPiece without a piece arg, it will remove the piece from the cell\n    this.setCellPiece(this.selectedCell)\n    // Set the piece in the cell we want to move to\n    this.setCellPiece(pos, piece)\n    this.clearMarkedCells()\n  }\n  setCellPiece(pos: Pos, piece = '') {\n    this.value[pos.i][pos.j].piece = piece\n  }\n  clearMarkedCells() {\n    this.value = this.value.map(row => row.map(cell => {\n      cell.isMarked = false\n      return cell\n    }))\n  }\n  getNewCell(i: number, j: number) {\n    return {\n      pos: {\n        i,\n        j\n      },\n      // Don't @ me, I'm just a piece of code\n      piece: (i + j) % 2 === 0 ? i < 3 ? 'black' : i > 4 ? 'white' : '' : '',\n      isMarked: false\n    }\n  }\n\n}\n\nfunction _makeId(length = 8) {\n  let txt = ''\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (let i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}\n\n\ninterface GameBoard {\n  _id: string\n  createdAt: number\n  value: Board\n  selectedCell: Pos | null\n}\n\nexport interface Game {\n  _id: string\n  createdAt: number\n  board: GameBoard\n  turnColor: string\n  isGameOver: boolean\n}","import './style.css'\nimport { Game } from './classes'\nwindow.addEventListener('load', onInit)\n\n\n\nfunction onInit() {\n  const game = new Game()\n  game.renderBoard()\n}\n"],"names":["p","relList","link","processPreload","mutations","mutation","node","getFetchOpts","script","fetchOpts","Game","_makeId","GameBoard","elBoard","row","elRow","piece","pos","isMarked","elCell","board","i","j","ogPiece","cell","length","txt","possible","onInit"],"mappings":"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"}